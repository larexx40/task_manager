type User {
  _id: ID!
  name: String!
  email: String!
  username: String!
  age: Int
  phoneNumber: String
}

type UserWithToken {
  user: User!
  token: String!
}

input LoginInput {
  emailOrUsername: String!
  password: String!
}

input CreateUserInput {
  name: String!
  email: String!
  password: String!
  username: String!
  age: Int
  phoneNumber: String
}

input UpdateUserInput {
  name: String
  email: String
  password: String
  username: String
  age: Int
  phoneNumber: String
}

type Query {
  getUser(id: ID!): User!
}

type Mutation {
  createUser(name: String!, email: String!): User!
  login(loginInput: LoginInput!): UserWithToken!
  signup(createUserInput: CreateUserInput!): UserWithToken!
  # Add other user mutations here
}